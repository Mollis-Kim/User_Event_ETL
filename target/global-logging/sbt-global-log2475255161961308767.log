[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\himuc\AppData\Local\Temp\idea1.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\himuc\AppData\Local\Temp\idea1.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.10.10 (Amazon.com Inc. Java 1.8.0_402)
[debug] Load.defaultLoad until apply took 106.1634ms
[debug]           Load.loadUnit: plugins took 42.6564ms
[debug]           Load.loadUnit: defsScala took 0.1843ms
[debug] [Loading] Scanning directory C:\Users\himuc\OneDrive\바탕 화면\WAU\project
[debug]             Load.loadUnit: mkEval took 4.0598ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\himuc\OneDrive\바탕 화면\WAU\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 9.8899 ms
[info] loading settings for project wau-build from idea1.sbt...
[debug]               Load.resolveProject(wau-build) took 31.982ms
[debug]             Load.loadTransitive: finalizeProject(Project(id wau-build, base: C:\Users\himuc\OneDrive\바탕 화면\WAU\project, plugins: List(<none>))) took 57.419ms
[debug] [Loading] Done in C:\Users\himuc\OneDrive\바탕 화면\WAU\project, returning: (wau-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 194.7133ms
[debug]           Load.loadUnit: cleanEvalClasses took 4.5253ms
[debug]         Load.loadUnit(file:/C:/Users/himuc/OneDrive/바탕%20화면/WAU/project/, ...) took 245.2401ms
[debug]       Load.apply: load took 303.6337ms
[debug]       Load.apply: resolveProjects took 2.9401ms
[debug]       Load.apply: finalTransforms took 35.5392ms
[debug]       Load.apply: config.delegates took 3.6698ms
[debug]       Load.apply: Def.make(settings)... took 177.3991ms
[debug]       Load.apply: structureIndex took 45.7309ms
[debug]       Load.apply: mkStreams took 1.4017ms
[info] loading project definition from C:\Users\himuc\OneDrive\바탕 화면\WAU\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 1047.4892ms
[debug]     Load.loadUnit: defsScala took 0.0033ms
[debug] [Loading] Scanning directory C:\Users\himuc\OneDrive\바탕 화면\WAU
[debug]       Load.loadUnit: mkEval took 0.216ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.6301 ms
[info] loading settings for project root from build.sbt...
[debug]         Load.resolveProject(root) took 13.8262ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\himuc\OneDrive\바탕 화면\WAU, plugins: List(<none>))) took 16.5084ms
[debug] [Loading] Done in C:\Users\himuc\OneDrive\바탕 화면\WAU, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 72.1675ms
[debug]     Load.loadUnit: cleanEvalClasses took 2.9809ms
[debug]   Load.loadUnit(file:/C:/Users/himuc/OneDrive/바탕%20화면/WAU/, ...) took 1123.3058ms
[debug] Load.apply: load took 1137.9141ms
[debug] Load.apply: resolveProjects took 0.078ms
[debug] Load.apply: finalTransforms took 17.2627ms
[debug] Load.apply: config.delegates took 0.3482ms
[debug] Load.apply: Def.make(settings)... took 34.4209ms
[debug] Load.apply: structureIndex took 12.1829ms
[debug] Load.apply: mkStreams took 0.0019ms
[info] set current project to WAU (in build file:/C:/Users/himuc/OneDrive/바탕%20화면/WAU/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 63853 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 63853, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to WAU (in build file:/C:/Users/himuc/OneDrive/바탕%20화면/WAU/)
[debug] > Exec(idea-shell, None, None)
